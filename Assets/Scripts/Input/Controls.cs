//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Input/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""GameBase"",
            ""id"": ""76af5e38-b6e0-4b86-89e3-a9395d0d339e"",
            ""actions"": [
                {
                    ""name"": ""ToggleBewMode"",
                    ""type"": ""Button"",
                    ""id"": ""cf555629-d82d-4109-8601-bb8f80c4ee28"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleQuests"",
                    ""type"": ""Button"",
                    ""id"": ""28443a34-cfe7-43d5-9bfe-da3d7783b6a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleBook"",
                    ""type"": ""Button"",
                    ""id"": ""06bcbe1b-4062-41e2-9198-7c835bc92b55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleConversations"",
                    ""type"": ""Button"",
                    ""id"": ""5d989e12-c270-410c-920c-d6177eba1f53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TogglePauseMenu"",
                    ""type"": ""Button"",
                    ""id"": ""9eba2b5f-48b9-4828-a47b-d0a7ddf3258f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d1f05547-4e26-420a-bf9f-406371a6e5d6"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/hat/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""ToggleBewMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fc0334b8-697f-4bc9-86a8-3f10c6c640f1"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleBewMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc2f7216-361e-4c08-9b77-d36a43bd4b95"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/hat/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""ToggleQuests"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""62bd27bb-3755-47f4-9fc6-fe9be5d27fe4"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleQuests"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""17b48fe0-41bd-44af-9065-46569d949386"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/hat/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""ToggleBook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""426104d0-f495-435c-bbba-65ca5452dedb"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleBook"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3d45565b-07b6-41d2-a919-deabcd4d5a3f"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/hat/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleConversations"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59e6c930-317a-4e7d-97f4-f3909e3cb798"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleConversations"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""267d43e6-35fc-4708-b828-40f210af3f9e"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""TogglePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d15618a-bebe-409a-b308-058f125d8f6b"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePauseMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""8786f80e-b91e-4e10-a95e-bd17a17d1fa0"",
            ""actions"": [
                {
                    ""name"": ""Navigate"",
                    ""type"": ""PassThrough"",
                    ""id"": ""b16f859a-c7f5-4195-b648-87a79db8b97d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""68d76b77-4170-435d-9749-80cb33475d68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""d722b477-67dc-49e0-ae55-42037c06e794"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Point"",
                    ""type"": ""PassThrough"",
                    ""id"": ""960651dd-e1c5-485c-89dc-ebb536b95b77"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Click"",
                    ""type"": ""PassThrough"",
                    ""id"": ""fdc2234e-d1f2-4386-9736-0b44da40a902"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d14454a8-2495-4133-865a-7ea4edbc9533"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MiddleClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5bd09849-0589-4393-a87a-70a2d4830330"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""PassThrough"",
                    ""id"": ""dfd1b329-63e5-4121-a9f5-052608745825"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""fac5b728-157f-4a0a-a27f-51a304ab696f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1e19ffa5-0786-47b4-84ca-470abd04d404"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c039a990-f88f-4e89-9337-c4c9f6aeefeb"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a80030fc-e976-40cd-a7e7-f78d1353ad3f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""52dda9c1-3d0e-43a1-b6ed-d0bcf24632d9"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d40a72e5-efb0-45e6-868e-ffe28b85380f"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e910eb11-1878-46e3-9723-cf34583582c9"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""106c6f7f-d3dc-4fdc-8096-621d25212611"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5fc9e296-4631-4fae-ab86-011fcc23b3b7"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""77c4f0bd-38d7-49c0-8ffe-7b9dbd9e7027"",
                    ""path"": ""<Gamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""id"": ""14b666c8-b2e7-4189-b1ac-8e514e93fad2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c555d4a3-239e-4f2a-a947-0c9b9d614497"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""35c28053-ac54-4e82-ad74-999e1e0cc3f8"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""78458dd5-f5f5-4383-94a3-518290497ae3"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3433b411-225d-4bc6-947f-12934524bf10"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""09c007c8-ac5d-4713-af6c-499546f4af61"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Navigate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d349c618-12d0-46eb-9a68-e841e43adc50"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6d59fcc0-4802-4100-b275-ae985898a20c"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""daf0538d-c19d-4f70-9d6d-1a8120e1be9e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""949e3137-8a66-41f3-9d93-a7d69e5d8c18"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Navigate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""77427852-c7fb-4c6a-bd94-bfb556f24420"",
                    ""path"": ""*/{Submit}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40dd4fec-908f-4325-ac6d-3cda92fd1692"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e5e707b-f83d-44ac-b30e-f953c79dc648"",
                    ""path"": ""*/{Cancel}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""85329871-33ed-409b-86e1-edd2ed267996"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c6d8fbd9-483e-4cb7-888c-07ec025e2f07"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db1a8118-8a0c-4a3e-9aba-ad8d799d6e73"",
                    ""path"": ""<Joystick>/trigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fa3129a3-7512-463e-b307-180b62571131"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""ScrollWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""47118d36-7ae4-4d98-925e-5e6e9d0a2e9b"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""MiddleClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ca953b90-afb5-4b85-a199-1b944d7972c1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b8f02d8-b9c8-4324-bf38-99dcfa8b8a40"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""QuickTime"",
            ""id"": ""5e191197-67b4-4af6-9ed5-abd9d6a5fe40"",
            ""actions"": [
                {
                    ""name"": ""Quick1Left"",
                    ""type"": ""Button"",
                    ""id"": ""87ea1f5d-29e2-46e2-8d2d-6d09e6e9bfad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick1Right"",
                    ""type"": ""Button"",
                    ""id"": ""ad19c160-4e85-4896-9128-a021b3c498c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick2Left"",
                    ""type"": ""Button"",
                    ""id"": ""c5ea4607-b427-4f74-b048-5b3c9310e654"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick2Right"",
                    ""type"": ""Button"",
                    ""id"": ""972c0135-2eb9-4cad-adf1-5015c81147f5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick3Left"",
                    ""type"": ""Button"",
                    ""id"": ""c124ba5a-4f49-444f-8093-e6407afd9ef1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Quick3Right"",
                    ""type"": ""Button"",
                    ""id"": ""b0c4fa06-6c0c-4d4f-b93b-e31aaeae5a68"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""QThrust"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c6e6e578-d31e-407f-be28-e6498c96ff83"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d5134842-2390-4537-bc5d-7ebff4b7abc7"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick1Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4024e3b0-e8b3-4852-92f8-3a42e022d3d9"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick1Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98112153-86a7-4a72-bd4c-7e51d77eb6a8"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick1Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ac0b31ed-a6c8-4055-9ac7-88772ebbc968"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick1Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d6c153f-d466-48cb-af07-d97e031372ed"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick2Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84acb8ac-b04c-4d1f-87e1-a8f2ab1596af"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick2Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0724e03c-3592-45cb-be4f-5c697bd38680"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button11"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick2Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a9873cd-d70d-4c41-8ec0-852b0f515059"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick2Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2af50f11-1d64-415c-bee9-00c3ae7f9711"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button10"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick3Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d6630938-94c1-4128-b140-9c4ebe312306"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick3Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26d8e432-0502-4645-84d4-3173ebeb16b8"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/z"",
                    ""interactions"": """",
                    ""processors"": ""Invert"",
                    ""groups"": ""Joystick"",
                    ""action"": ""QThrust"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3932eb2-e723-428b-bd91-22d3b15cdf44"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Quick3Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a29e9b7-809b-48be-8450-06400b43a5fa"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Quick3Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Brew"",
            ""id"": ""f5710721-5deb-4e7b-88b2-aed48727f9e9"",
            ""actions"": [
                {
                    ""name"": ""Mix"",
                    ""type"": ""PassThrough"",
                    ""id"": ""86c08c2c-5150-444f-be3f-0f288199758c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""445aa036-85f3-459c-be6c-fd398b508e1c"",
                    ""path"": ""<Joystick>/stick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Joystick"",
                    ""action"": ""Mix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""94cc59ae-eaec-4540-b7ba-c3f1e16b9514"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mix"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b501b9e2-b3cf-41eb-b33f-8840a98bf117"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Mix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b0ba6b21-8e61-4d0a-a57e-f31a73f3518b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Mix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""36ed4065-2e52-4c23-8e3f-a3e967efde3d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Mix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""a96d353f-914b-4e7c-976c-f71d06f9b472"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""Mix"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""UIoptions"",
            ""id"": ""5848c976-4225-4ebb-9f4b-560ca5827c6e"",
            ""actions"": [
                {
                    ""name"": ""OptionsSubSectionNavigateLeft"",
                    ""type"": ""Button"",
                    ""id"": ""a2e65531-36f6-4fe2-a569-f4abd8b1acc2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OptionsSubSectionNavigateRight"",
                    ""type"": ""Button"",
                    ""id"": ""286f4d79-349d-4e27-b63c-2a8c7a9ea598"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OptionsSubSectionBack"",
                    ""type"": ""Button"",
                    ""id"": ""f21fa168-6a53-4344-a71a-38377d1db2fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f56b4c52-f1c1-4128-834e-053ca96ccfa9"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OptionsSubSectionNavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d4270539-85ed-404c-8a29-dbe0bea85235"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""OptionsSubSectionNavigateLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c028d87-ce17-47c7-9afa-ac0fca539dda"",
                    ""path"": ""<HID::SHANWAN PS3/PC Gamepad>/button6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OptionsSubSectionNavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff578bc6-e921-4346-ab47-828779a9bb72"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardAndMouse"",
                    ""action"": ""OptionsSubSectionNavigateRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8ecdb9e8-1572-48f4-861c-a5124038350c"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OptionsSubSectionBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": []
        },
        {
            ""name"": ""KeyboardAndMouse"",
            ""bindingGroup"": ""KeyboardAndMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GameBase
        m_GameBase = asset.FindActionMap("GameBase", throwIfNotFound: true);
        m_GameBase_ToggleBewMode = m_GameBase.FindAction("ToggleBewMode", throwIfNotFound: true);
        m_GameBase_ToggleQuests = m_GameBase.FindAction("ToggleQuests", throwIfNotFound: true);
        m_GameBase_ToggleBook = m_GameBase.FindAction("ToggleBook", throwIfNotFound: true);
        m_GameBase_ToggleConversations = m_GameBase.FindAction("ToggleConversations", throwIfNotFound: true);
        m_GameBase_TogglePauseMenu = m_GameBase.FindAction("TogglePauseMenu", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Navigate = m_UI.FindAction("Navigate", throwIfNotFound: true);
        m_UI_Submit = m_UI.FindAction("Submit", throwIfNotFound: true);
        m_UI_Cancel = m_UI.FindAction("Cancel", throwIfNotFound: true);
        m_UI_Point = m_UI.FindAction("Point", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
        m_UI_ScrollWheel = m_UI.FindAction("ScrollWheel", throwIfNotFound: true);
        m_UI_MiddleClick = m_UI.FindAction("MiddleClick", throwIfNotFound: true);
        m_UI_RightClick = m_UI.FindAction("RightClick", throwIfNotFound: true);
        // QuickTime
        m_QuickTime = asset.FindActionMap("QuickTime", throwIfNotFound: true);
        m_QuickTime_Quick1Left = m_QuickTime.FindAction("Quick1Left", throwIfNotFound: true);
        m_QuickTime_Quick1Right = m_QuickTime.FindAction("Quick1Right", throwIfNotFound: true);
        m_QuickTime_Quick2Left = m_QuickTime.FindAction("Quick2Left", throwIfNotFound: true);
        m_QuickTime_Quick2Right = m_QuickTime.FindAction("Quick2Right", throwIfNotFound: true);
        m_QuickTime_Quick3Left = m_QuickTime.FindAction("Quick3Left", throwIfNotFound: true);
        m_QuickTime_Quick3Right = m_QuickTime.FindAction("Quick3Right", throwIfNotFound: true);
        m_QuickTime_QThrust = m_QuickTime.FindAction("QThrust", throwIfNotFound: true);
        // Brew
        m_Brew = asset.FindActionMap("Brew", throwIfNotFound: true);
        m_Brew_Mix = m_Brew.FindAction("Mix", throwIfNotFound: true);
        // UIoptions
        m_UIoptions = asset.FindActionMap("UIoptions", throwIfNotFound: true);
        m_UIoptions_OptionsSubSectionNavigateLeft = m_UIoptions.FindAction("OptionsSubSectionNavigateLeft", throwIfNotFound: true);
        m_UIoptions_OptionsSubSectionNavigateRight = m_UIoptions.FindAction("OptionsSubSectionNavigateRight", throwIfNotFound: true);
        m_UIoptions_OptionsSubSectionBack = m_UIoptions.FindAction("OptionsSubSectionBack", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GameBase
    private readonly InputActionMap m_GameBase;
    private IGameBaseActions m_GameBaseActionsCallbackInterface;
    private readonly InputAction m_GameBase_ToggleBewMode;
    private readonly InputAction m_GameBase_ToggleQuests;
    private readonly InputAction m_GameBase_ToggleBook;
    private readonly InputAction m_GameBase_ToggleConversations;
    private readonly InputAction m_GameBase_TogglePauseMenu;
    public struct GameBaseActions
    {
        private @Controls m_Wrapper;
        public GameBaseActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @ToggleBewMode => m_Wrapper.m_GameBase_ToggleBewMode;
        public InputAction @ToggleQuests => m_Wrapper.m_GameBase_ToggleQuests;
        public InputAction @ToggleBook => m_Wrapper.m_GameBase_ToggleBook;
        public InputAction @ToggleConversations => m_Wrapper.m_GameBase_ToggleConversations;
        public InputAction @TogglePauseMenu => m_Wrapper.m_GameBase_TogglePauseMenu;
        public InputActionMap Get() { return m_Wrapper.m_GameBase; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameBaseActions set) { return set.Get(); }
        public void SetCallbacks(IGameBaseActions instance)
        {
            if (m_Wrapper.m_GameBaseActionsCallbackInterface != null)
            {
                @ToggleBewMode.started -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBewMode;
                @ToggleBewMode.performed -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBewMode;
                @ToggleBewMode.canceled -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBewMode;
                @ToggleQuests.started -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleQuests;
                @ToggleQuests.performed -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleQuests;
                @ToggleQuests.canceled -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleQuests;
                @ToggleBook.started -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBook;
                @ToggleBook.performed -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBook;
                @ToggleBook.canceled -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleBook;
                @ToggleConversations.started -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleConversations;
                @ToggleConversations.performed -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleConversations;
                @ToggleConversations.canceled -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnToggleConversations;
                @TogglePauseMenu.started -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.performed -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnTogglePauseMenu;
                @TogglePauseMenu.canceled -= m_Wrapper.m_GameBaseActionsCallbackInterface.OnTogglePauseMenu;
            }
            m_Wrapper.m_GameBaseActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ToggleBewMode.started += instance.OnToggleBewMode;
                @ToggleBewMode.performed += instance.OnToggleBewMode;
                @ToggleBewMode.canceled += instance.OnToggleBewMode;
                @ToggleQuests.started += instance.OnToggleQuests;
                @ToggleQuests.performed += instance.OnToggleQuests;
                @ToggleQuests.canceled += instance.OnToggleQuests;
                @ToggleBook.started += instance.OnToggleBook;
                @ToggleBook.performed += instance.OnToggleBook;
                @ToggleBook.canceled += instance.OnToggleBook;
                @ToggleConversations.started += instance.OnToggleConversations;
                @ToggleConversations.performed += instance.OnToggleConversations;
                @ToggleConversations.canceled += instance.OnToggleConversations;
                @TogglePauseMenu.started += instance.OnTogglePauseMenu;
                @TogglePauseMenu.performed += instance.OnTogglePauseMenu;
                @TogglePauseMenu.canceled += instance.OnTogglePauseMenu;
            }
        }
    }
    public GameBaseActions @GameBase => new GameBaseActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_Navigate;
    private readonly InputAction m_UI_Submit;
    private readonly InputAction m_UI_Cancel;
    private readonly InputAction m_UI_Point;
    private readonly InputAction m_UI_Click;
    private readonly InputAction m_UI_ScrollWheel;
    private readonly InputAction m_UI_MiddleClick;
    private readonly InputAction m_UI_RightClick;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Navigate => m_Wrapper.m_UI_Navigate;
        public InputAction @Submit => m_Wrapper.m_UI_Submit;
        public InputAction @Cancel => m_Wrapper.m_UI_Cancel;
        public InputAction @Point => m_Wrapper.m_UI_Point;
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputAction @ScrollWheel => m_Wrapper.m_UI_ScrollWheel;
        public InputAction @MiddleClick => m_Wrapper.m_UI_MiddleClick;
        public InputAction @RightClick => m_Wrapper.m_UI_RightClick;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @Navigate.started -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Navigate.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnNavigate;
                @Submit.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Submit.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSubmit;
                @Cancel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Cancel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCancel;
                @Point.started -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Point.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnPoint;
                @Click.started -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @Click.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnClick;
                @ScrollWheel.started -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnScrollWheel;
                @MiddleClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @MiddleClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMiddleClick;
                @RightClick.started -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
                @RightClick.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnRightClick;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Navigate.started += instance.OnNavigate;
                @Navigate.performed += instance.OnNavigate;
                @Navigate.canceled += instance.OnNavigate;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Point.started += instance.OnPoint;
                @Point.performed += instance.OnPoint;
                @Point.canceled += instance.OnPoint;
                @Click.started += instance.OnClick;
                @Click.performed += instance.OnClick;
                @Click.canceled += instance.OnClick;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @MiddleClick.started += instance.OnMiddleClick;
                @MiddleClick.performed += instance.OnMiddleClick;
                @MiddleClick.canceled += instance.OnMiddleClick;
                @RightClick.started += instance.OnRightClick;
                @RightClick.performed += instance.OnRightClick;
                @RightClick.canceled += instance.OnRightClick;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // QuickTime
    private readonly InputActionMap m_QuickTime;
    private IQuickTimeActions m_QuickTimeActionsCallbackInterface;
    private readonly InputAction m_QuickTime_Quick1Left;
    private readonly InputAction m_QuickTime_Quick1Right;
    private readonly InputAction m_QuickTime_Quick2Left;
    private readonly InputAction m_QuickTime_Quick2Right;
    private readonly InputAction m_QuickTime_Quick3Left;
    private readonly InputAction m_QuickTime_Quick3Right;
    private readonly InputAction m_QuickTime_QThrust;
    public struct QuickTimeActions
    {
        private @Controls m_Wrapper;
        public QuickTimeActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Quick1Left => m_Wrapper.m_QuickTime_Quick1Left;
        public InputAction @Quick1Right => m_Wrapper.m_QuickTime_Quick1Right;
        public InputAction @Quick2Left => m_Wrapper.m_QuickTime_Quick2Left;
        public InputAction @Quick2Right => m_Wrapper.m_QuickTime_Quick2Right;
        public InputAction @Quick3Left => m_Wrapper.m_QuickTime_Quick3Left;
        public InputAction @Quick3Right => m_Wrapper.m_QuickTime_Quick3Right;
        public InputAction @QThrust => m_Wrapper.m_QuickTime_QThrust;
        public InputActionMap Get() { return m_Wrapper.m_QuickTime; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuickTimeActions set) { return set.Get(); }
        public void SetCallbacks(IQuickTimeActions instance)
        {
            if (m_Wrapper.m_QuickTimeActionsCallbackInterface != null)
            {
                @Quick1Left.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Left;
                @Quick1Left.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Left;
                @Quick1Left.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Left;
                @Quick1Right.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Right;
                @Quick1Right.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Right;
                @Quick1Right.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick1Right;
                @Quick2Left.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Left;
                @Quick2Left.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Left;
                @Quick2Left.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Left;
                @Quick2Right.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Right;
                @Quick2Right.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Right;
                @Quick2Right.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick2Right;
                @Quick3Left.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Left;
                @Quick3Left.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Left;
                @Quick3Left.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Left;
                @Quick3Right.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Right;
                @Quick3Right.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Right;
                @Quick3Right.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQuick3Right;
                @QThrust.started -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQThrust;
                @QThrust.performed -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQThrust;
                @QThrust.canceled -= m_Wrapper.m_QuickTimeActionsCallbackInterface.OnQThrust;
            }
            m_Wrapper.m_QuickTimeActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Quick1Left.started += instance.OnQuick1Left;
                @Quick1Left.performed += instance.OnQuick1Left;
                @Quick1Left.canceled += instance.OnQuick1Left;
                @Quick1Right.started += instance.OnQuick1Right;
                @Quick1Right.performed += instance.OnQuick1Right;
                @Quick1Right.canceled += instance.OnQuick1Right;
                @Quick2Left.started += instance.OnQuick2Left;
                @Quick2Left.performed += instance.OnQuick2Left;
                @Quick2Left.canceled += instance.OnQuick2Left;
                @Quick2Right.started += instance.OnQuick2Right;
                @Quick2Right.performed += instance.OnQuick2Right;
                @Quick2Right.canceled += instance.OnQuick2Right;
                @Quick3Left.started += instance.OnQuick3Left;
                @Quick3Left.performed += instance.OnQuick3Left;
                @Quick3Left.canceled += instance.OnQuick3Left;
                @Quick3Right.started += instance.OnQuick3Right;
                @Quick3Right.performed += instance.OnQuick3Right;
                @Quick3Right.canceled += instance.OnQuick3Right;
                @QThrust.started += instance.OnQThrust;
                @QThrust.performed += instance.OnQThrust;
                @QThrust.canceled += instance.OnQThrust;
            }
        }
    }
    public QuickTimeActions @QuickTime => new QuickTimeActions(this);

    // Brew
    private readonly InputActionMap m_Brew;
    private IBrewActions m_BrewActionsCallbackInterface;
    private readonly InputAction m_Brew_Mix;
    public struct BrewActions
    {
        private @Controls m_Wrapper;
        public BrewActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Mix => m_Wrapper.m_Brew_Mix;
        public InputActionMap Get() { return m_Wrapper.m_Brew; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BrewActions set) { return set.Get(); }
        public void SetCallbacks(IBrewActions instance)
        {
            if (m_Wrapper.m_BrewActionsCallbackInterface != null)
            {
                @Mix.started -= m_Wrapper.m_BrewActionsCallbackInterface.OnMix;
                @Mix.performed -= m_Wrapper.m_BrewActionsCallbackInterface.OnMix;
                @Mix.canceled -= m_Wrapper.m_BrewActionsCallbackInterface.OnMix;
            }
            m_Wrapper.m_BrewActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Mix.started += instance.OnMix;
                @Mix.performed += instance.OnMix;
                @Mix.canceled += instance.OnMix;
            }
        }
    }
    public BrewActions @Brew => new BrewActions(this);

    // UIoptions
    private readonly InputActionMap m_UIoptions;
    private IUIoptionsActions m_UIoptionsActionsCallbackInterface;
    private readonly InputAction m_UIoptions_OptionsSubSectionNavigateLeft;
    private readonly InputAction m_UIoptions_OptionsSubSectionNavigateRight;
    private readonly InputAction m_UIoptions_OptionsSubSectionBack;
    public struct UIoptionsActions
    {
        private @Controls m_Wrapper;
        public UIoptionsActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @OptionsSubSectionNavigateLeft => m_Wrapper.m_UIoptions_OptionsSubSectionNavigateLeft;
        public InputAction @OptionsSubSectionNavigateRight => m_Wrapper.m_UIoptions_OptionsSubSectionNavigateRight;
        public InputAction @OptionsSubSectionBack => m_Wrapper.m_UIoptions_OptionsSubSectionBack;
        public InputActionMap Get() { return m_Wrapper.m_UIoptions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIoptionsActions set) { return set.Get(); }
        public void SetCallbacks(IUIoptionsActions instance)
        {
            if (m_Wrapper.m_UIoptionsActionsCallbackInterface != null)
            {
                @OptionsSubSectionNavigateLeft.started -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateLeft.performed -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateLeft.canceled -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateRight.started -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionNavigateRight.performed -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionNavigateRight.canceled -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionBack.started -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionBack;
                @OptionsSubSectionBack.performed -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionBack;
                @OptionsSubSectionBack.canceled -= m_Wrapper.m_UIoptionsActionsCallbackInterface.OnOptionsSubSectionBack;
            }
            m_Wrapper.m_UIoptionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OptionsSubSectionNavigateLeft.started += instance.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateLeft.performed += instance.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateLeft.canceled += instance.OnOptionsSubSectionNavigateLeft;
                @OptionsSubSectionNavigateRight.started += instance.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionNavigateRight.performed += instance.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionNavigateRight.canceled += instance.OnOptionsSubSectionNavigateRight;
                @OptionsSubSectionBack.started += instance.OnOptionsSubSectionBack;
                @OptionsSubSectionBack.performed += instance.OnOptionsSubSectionBack;
                @OptionsSubSectionBack.canceled += instance.OnOptionsSubSectionBack;
            }
        }
    }
    public UIoptionsActions @UIoptions => new UIoptionsActions(this);
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_KeyboardAndMouseSchemeIndex = -1;
    public InputControlScheme KeyboardAndMouseScheme
    {
        get
        {
            if (m_KeyboardAndMouseSchemeIndex == -1) m_KeyboardAndMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardAndMouse");
            return asset.controlSchemes[m_KeyboardAndMouseSchemeIndex];
        }
    }
    public interface IGameBaseActions
    {
        void OnToggleBewMode(InputAction.CallbackContext context);
        void OnToggleQuests(InputAction.CallbackContext context);
        void OnToggleBook(InputAction.CallbackContext context);
        void OnToggleConversations(InputAction.CallbackContext context);
        void OnTogglePauseMenu(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnNavigate(InputAction.CallbackContext context);
        void OnSubmit(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnPoint(InputAction.CallbackContext context);
        void OnClick(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnMiddleClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
    }
    public interface IQuickTimeActions
    {
        void OnQuick1Left(InputAction.CallbackContext context);
        void OnQuick1Right(InputAction.CallbackContext context);
        void OnQuick2Left(InputAction.CallbackContext context);
        void OnQuick2Right(InputAction.CallbackContext context);
        void OnQuick3Left(InputAction.CallbackContext context);
        void OnQuick3Right(InputAction.CallbackContext context);
        void OnQThrust(InputAction.CallbackContext context);
    }
    public interface IBrewActions
    {
        void OnMix(InputAction.CallbackContext context);
    }
    public interface IUIoptionsActions
    {
        void OnOptionsSubSectionNavigateLeft(InputAction.CallbackContext context);
        void OnOptionsSubSectionNavigateRight(InputAction.CallbackContext context);
        void OnOptionsSubSectionBack(InputAction.CallbackContext context);
    }
}
